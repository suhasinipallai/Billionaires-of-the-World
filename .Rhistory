Math >= 50 ~ "Medium" ,
Math < 50 ~ "Low"
)
) %>% select(Math,math_achievement)
mutate(ach_profile,
math_achievement  = case_when (
Math >= 75 ~ "High" ,
Math >= 50 ~ "Medium" ,
Math < 50 ~ "Low",
TRUE ~ "NO DATA"
)
) %>% select(Math,math_achievement)
ach_profile %>%
filter(system==792) %>%
View()
tvaas  <- read_csv("data/tvaas.csv")
tvaas
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
Select(tvaas,'TVAAS Composite')
Select(tvaas,'TVAAS Composite')
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
select(tvaas,'TVAAS Composite')
arrange(ach_profile,cORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_name)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_name)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_region)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,CORE_region)
View()
View(ach_profile)
ach_profile %>%
summarise(mean_grad=mean(Graduation,na.rm=TRUE),
min_grad = min(Graduation,na.rm=TRUE),
max_grad=max(Graduation,na.rm=TRUE))
ach_profile %>%
mutate(median_ED = median(Pct_Ed,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_pct_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_pct_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >mediad_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_Math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
group_by(CORE_Region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_region, Dropout, dropout_mean)
ach_profile %>%
group_by(CORE_Region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_Region, Dropout, dropout_mean)
ach_profile %>%
group_by(CORE_region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_region, Dropout, dropout_mean)
select(system, system_name, Math, AlgI, AlgII, Math_avg,
ELA, EngI, EngII, EngIII, Eng_avg, Science, BioI, Chemistry, Sci_avg)
ach_profile %>%
rowwise() %>%
mutate(mean_Math = mean(c(Math,AlgI,AlgII),na.rm=TRUE),
mean_English = mean(c(ELA,EngI,EngII,EngIII),na.rm=TRUE),
mean_Science = mean(c(Science,BioI,Chemistry),na.rm=TRUE)
) %>%
ungroup() %>%
select(system, system_name, Math, AlgI, AlgII, Math_avg,
ELA, EngI, EngII, EngIII, Eng_avg, Science, BioI, Chemistry, Sci_avg)
ach_profile %>%
rowwise() %>%
mutate(mean_Math = mean(c(Math,AlgI,AlgII),na.rm=TRUE),
mean_English = mean(c(ELA,EngI,EngII,EngIII),na.rm=TRUE),
mean_Science = mean(c(Science,BioI,Chemistry),na.rm=TRUE)
) %>%
ungroup() %>%
select(system, system_name, Math, AlgI, AlgII, mean_Math,
ELA, EngI, EngII, EngIII, mean_English, Science, BioI, Chemistry, mean_Science)
view(tvaas)
View(tvaas)
source('C:/Users/Suhasini/gitdir/data-science/r-intro-suhasinipallai/suhasinipallai/data-wrangling/script.R', echo=TRUE)
ach_profile %>%
inner_join(tvaas,by="system") %>%
group_by(CORE_region)
ach_profile %>%
inner_join(tvaas,by="system") %>%
group_by(CORE_region)
rename(tvaas,'District Number'=system)
select(tvaas,'TVAAS Composite')
tvaas %>%
gather(subject,level,'TVAAS Composite':'TVAAS Numeracy')  %>%
arrange(`District Number`)
library(tidyverse)
ach_profile <- read_csv("data/achievement_profile_data_with_CORE.csv")
View(ach_profile)
getwd()
getwd()
View(ach_profile)
filter(ach_profile,AlgI ==100)
View(ach_profile)
summary(ach_profile)
glimpse(ach_profile)
?glimpse
??glimpse
library(dbplyr)
??glimpse
?glimpse
glimpse(ach_profile)
class(ach_profile)
?class
filter(ach_profile,AlgI == 100)
getwd()
#14
library(swirl)
library(ISLR)
library("ISLR")
install.packages("ISLR")
library("ISLR")
Auto
str(Auto)
str(Boston)
str(BOSTON)
str(Caravan)
str(USArrests)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
library(readxl)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 6)
rm(list=ls())
View(json_data)
json_data <- read_json("Data/forbes1_2000.json",simplifyVector = TRUE)
library("rjson")
library(jsonlite)
library(xlsx)
library("rjson")
library(jsonlite)
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
library("rjson")
library(jsonlite
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
library("rjson")
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
library(jsonlite)
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
json_data <- read_json("Data/forbes1_2000.json",simplifyVector = TRUE)
View(json_data)
billionaires_data <- json_data[-c(2044:2126),-c(18:20,23:25)]
View(billionaires_data)
missing_age1 <- is.na(billionaires_data$age)
no_age <- billionaires_data[missing_age1,]
View(no_age)
missing_age1 <- is.na(billionaires_data$age)
View(missing_age1)
no_age <- billionaires_data[missing_age1,]
colSums(is.na(billionaires_data))
missing_age_csv <- read.csv(file="Data/missing_age.csv", header=TRUE, sep=",")
class(missing_age_csv)
billionaires_data <- dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x)) %>%
select(position,rank,name,age) %>%
View()
View(billionaires_data)
dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x)) %>%
select(position,rank,name,age) %>%
View()
library(magrittr)
dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x)) %>%
select(position,rank,name,age) %>%
View()
dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x))
dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x))
billionaires_data <- dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x))
View(billionaires_data)
billionaires_data <- dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x)) %>%
select(name,age,position,rank)
library(dplyr)
dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x)) %>%
select(name,age,position,rank)
billionaires_data <- dplyr::left_join(billionaires_data, missing_age_csv, by = c("name")) %>%
mutate(age = ifelse(is.na(age.x), age.y, age.x))
View(billionaires_data)
colSums(is.na(billionaires_data))
missing_gender <- is.na(billionaires_data$gender)
View(missing_gender)
no_gender <- billionaires_data[missing_gender,]
View(no_gender)
colSums(billionaires_data)
colnames(billionaires_data)
colSums(is.na(billionaires_data))
billionaires_data <- billionaires_data[-c(8,9,14,16:18,20)]
View(billionaires_data)
colnames(billionaires_data)
colSums(is.na(billionaires_data))
colSums(is.na(billionaires_data))
billionaires_data$gender[is.na(billionaires_data$gender)] <- "unknown"
View(billionaires_data)
View(billionaires_data)
colSums(is.na(billionaires_data))
billionaires_data$age[is.na(billionaires_data$age)] <- 0
View(billionaires_data)
colSums(is.na(billionaires_data))
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
billionaires_data <- read_csv('r-objects/billionaires_data.rds')
?read.csv
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
View(billionaires_data)
?readRDS
billionaires_data$age[age>65]
billionaires_data$age[billionaires_data$age>65]
age_65 <- billionaires_data$age[billionaires_data$age>65]
ab <-billionaires_data[age_65,]
View(ab)
age_65 <- billionaires_data$age[billionaires_data$age>65]
age_65
age_65 <- billionaires_data[billionaires_data$age>65]
age_65
ab <-billionaires_data[age_65,]
View(ab)
age_65 <- billionaires_data[which(billionaires_data$age>65 & billionaires_data$gender=='F'), ]
View(age_65)
age_m_40 <- subset(billionaires_data, sex=="M" & age < 40,
select=position:age)
age_m_40 <- subset(billionaires_data, sex=="M" & age < 40,
select=position:age)
age_m_40 <- subset(billionaires_data, sex=="M" & age < 40,
select=position:age)
age_m_40 <- subset(billionaires_data, gender=="M" & age < 40,
select=position:age)
View(age_m_40)
age_m_40 <- subset(billionaires_data, gender=="M" & age < 40 & age > 0,
select=position:age)
View(age_m_40)
age_f_40 <- subset(billionaires_data, gender=="F" & age < 40 & age > 0,
select=position:age)
View(age_f_40)
age_40 <- subset(billionaires_data, age >0 & age < 40,
select=position:age)
View(age_40)
View(age_65)
View(age_40)
View(age_f_40)
View(age_m_40)
View(age_m_40)
View(age_f_40)
View(age_40)
plot(billionaires_data$rank,billionaires_data$age)
plot(billionaires_data$age,billionaires_data$rank)
ggplot(billionaires_data,aes(x=age,y=rank)) +
geom_col()
ggplot(billionaires_data,aes(x=age,y=rank)) +
geom_col()
library(ggplot2)
library(ggplot2)
ggplot(billionaires_data,aes(x=age,y=rank)) +
geom_col()
cor(billionaires_data)
cor(billionaires_data)
str(billionaires_data)
ggplot(age_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_f_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_m_40,aes(x=age,y=rank)) +geom_bar()
ggplot(age_m_40,aes(x=age,y=rank)) +geom_col()
ggplot(age_m_40,aes(x=age,y=rank)) +geom_point()
ggplot(age_m_40,aes(x=age,y=rank)) +geom_col()
View(age_m_40)
ggplot(age_m_40,aes(x=age)) +geom_histogram()
ggplot(age_f_40,aes(x=industry,y=worth,group = industry))+
geom_point()
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point()
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point(method="lm")
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(methos="lm")
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(method="lm")
ggplot(billionaires_data,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(method="lm")
ggplot(age_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(method="lm")
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(method="lm")
View(billionaires_data)
ggplot(age_f_40,aes(x=age,y=rank)) + geom_col()
View(missing_age_csv)
View(no_age)
ggplot(age_f_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_f_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_m_40,aes(x=age)) +geom_histogram()
ggplot(age_f_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_40,aes(x=age,y=rank)) + geom_col()
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_point() +
geom_smooth(method="lm")
ggplot(billionaires_data,aes(x=age,y=rank)) +
geom_col()
filter_age <- billionaires_data$age!=0
View(age_f_40)
ggplot(billionaires_data,aes(x=age,y= position )) +
geom_col()
ggplot(billionaires_data,aes(x=age,y= position )) +
geom_col()
ggplot(age_f_40,aes(x=industry,y=worth,group =source,color=source))+
geom_boxplot()
?ggplot
ggplot(age_m_40,aes(x=age)) +geom_histogram()
ggplot(age_m_40,aes(x=age)) +geom_histogram(bins = 10)
?grepl
miss_age <- is.na(billionaires_data$age)
no_age1 <- billionaires_data[miss_age,]
View(no_age1)
no_age1 <- billionaires_data$age==0
View(no_age1)
bb <- billionaires_data[no_age1,]
View(bb)
toMatch <- c("&", "family", "brothers","and")
matches <- unique (grep(paste(toMatch,collapse="|"),
bb$name, value=TRUE))
View(matches)
matches <- unique (grepl(paste(toMatch,collapse="|"),
bb$name, value=TRUE))
toMatch <- c("&", "family", "brothers","and","-")
matches <- unique (grep(paste(toMatch,collapse="|"),
bb$name, value=TRUE))
View(matches)
result <- filter(bb, grepl(paste(patterns, collapse="|"), name))
result <- filter(bb, grepl(paste(toMatch, collapse="|"), name))
result <- filter(bb, grepl(paste(toMatch, collapse="|"), name))
View(result)
class(result)
result$age <- 200
View(result)
no_age_data <- billionaires_data[billionaires_data$age==0]
no_age_data <- billionaires_data[billionaires_data$age==0,]
View(no_age_data)
result <- filter(no_age_data, grepl(paste(toMatch, collapse="|"), name)) %>%
result$age <-200
result <- filter(no_age_data, grepl(paste(toMatch, collapse="|"), name))
result$age <-200
View(result)
result <- filter(no_age_data, grepl(paste(toMatch, collapse="|"), name))
bd <- billionaires_data
bd <- billionaires_data
if(bd$age==0) {
toMatch <- c("&", "family", "brothers","and","-")
if(grepl(paste(toMatch,collapse = "|"),name)) {
bd$age <- 500
}
}
View(bd)
if(bd$age==0) {
toMatch <- c("&", "family", "brothers","and","-")
if(filter(grepl(paste(toMatch,collapse = "|"),name))) {
bd$age <- 500
}
}
View(bd)
merged_data <- merged_data %>%
mutate(ALT_category =ifelse(ALT > 8000 ,"High",
ifelse(ALT > 2000 ,"Medium" ,"Low")))
library(tidyverse)
library(readxl)
library(magrittr
setwd("C:/Users/Suhasini/gitdir/data-science/r-test")
merged_data <- merged_data %>%
mutate(ALT_category =ifelse(ALT > 8000 ,"High",
ifelse(ALT > 2000 ,"Medium" ,"Low")))
laser_2010 <- read_excel('./data/laser_incidents_2010-2014.xls',sheet= 'Laser Report 2010')
laser_2011 <- read_excel('./data/laser_incidents_2010-2014.xls',sheet= 'Laser Report 2011')
laser_2012 <- read_excel('./data/laser_incidents_2010-2014.xls',sheet= 'Laser Report 2012')
laser_2013 <- read_excel('./data/laser_incidents_2010-2014.xls',sheet= 'Laser Report 2013')
laser_2014 <- read_excel('./data/laser_incidents_2010-2014.xls',sheet= 'Laser Report 2014')
names(laser_2010)[names(laser_2010) == 'ACID'] <- 'Aircraft ID'
names(laser_2011)[names(laser_2011) == 'AC/ID'] <- 'Aircraft ID'
merged_data <- do.call("rbind", list(laser_2010, laser_2011, laser_2012,laser_2013,laser_2014))
unique_laser_color <- laser_2010 %>%
group_by(COLOR) %>%
unique() %>%
summarize(count=n()) %>%
ungroup()
blue_laser_incidents <- merged_data %>%
filter(COLOR=="Blue") %>%
group_by(COLOR) %>%
summarise(count = n()) %>%
ungroup()
cities <- merged_data %>%
group_by(CITY) %>%
summarise(count = n()) %>%
ungroup()
injury_cities <- merged_data %>%
filter(`Injury Reported` == 'NO',COLOR=="Blue") %>%
group_by(CITY) %>%
ungroup() %>%
select(CITY)
helo <- merged_data %>%
filter(`TYPE A/C` == 'HELO')
helo <- merged_data %>%
filter(`TYPE A/C` == 'HELO')
most_helo_city <- helo %>%
group_by(CITY) %>%
# summarise(helo_city = count(DATE)) %>%
summarise(total = n()) %>%
#ungroup()
arrange(desc(total))
merged_data <- merged_data[complete.cases(merged_data), ]
merged_data<-merged_data[!(merged_data$ALT=="UNKN" & merged_data$ALT==0),]
str(merged_data)
merged_data$ALT <- as.numeric(merged_data$ALT)
min_alt<- min(merged_data[,6], na.rm=TRUE)
max_alt <- max(merged_data[,6], na.rm=TRUE)
avg_alt <-  mean(merged_data[,6], na.rm=TRUE)
ALT_histogram <- ggplot(merged_data,aes(x=ALT)) +
geom_histogram(bins = 10)
ALT_histogram
merged_data <- merged_data %>%
mutate(ALT_category =ifelse(ALT > 8000 ,"High",
ifelse(ALT > 2000 ,"Medium" ,"Low")))
View(merged_data)
ggplot(data=merged_data,aes(x=DATE,y=ALT,color=ALT_category)) +
geom_point()
bd <- billionaires_data
if(bd$age==0) {
toMatch <- c("&", "family", "brothers","and","-")
if(filter(grepl(paste(toMatch,collapse = "|"),name))) {
bd$age <- 500
}
}
d <- c(2,4,5)
seq_along(d)
for(i in seq_along(bd)){
if(bd$age==0) {
toMatch <- c("&", "family", "brothers","and","-")
if(filter(grepl(paste(toMatch,collapse = "|"),name))) {
bd$age <- 500
}
}
}
View(bd)
for(i in seq_along(bd)){
if(bd$age==0) {
toMatch <- c("&", "family", "brothers", "and" , "-")
if(filter(no_age_data,grepl(paste(toMatch,collapse = "|"),name))) {
bd$age <- 500
}
}
}
View(bd)
if(bd$age==0) {
toMatch <- c("&", "family", "brothers", "and" , "-")
if(filter(no_age_data,grepl(paste(toMatch,collapse = "|"),name))) {
bd$age <- 500
}
}
View(bd)
?seq_along
?seq_along
?seq_along
?for loop
?grepl
?grepl
?grep
?hemp
?help
