filter(ach_profile,AlgI ==100)
mutate(ach_profile,
math_achievement  = case_when (
Math >= 75 ~ "High" ,
Math >= 50 ~ "Medium" ,
Math < 50 ~ "Low"
)
)
mutate(ach_profile,
math_achievement  = case_when (
Math >= 75 ~ "High" ,
Math >= 50 ~ "Medium" ,
Math < 50 ~ "Low"
)
) %>% select(Math,math_achievement)
mutate(ach_profile,
math_achievement  = case_when (
Math >= 75 ~ "High" ,
Math >= 50 ~ "Medium" ,
Math < 50 ~ "Low",
TRUE ~ "NO DATA"
)
) %>% select(Math,math_achievement)
ach_profile %>%
filter(system==792) %>%
View()
tvaas  <- read_csv("data/tvaas.csv")
tvaas
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
Select(tvaas,'TVAAS Composite')
Select(tvaas,'TVAAS Composite')
rename(system = 'District Name',
'TVAAS Composite' ='District-Wide: Composite' ,
'TVAAS Literacy' = 'District-Wide: Literacy' ,
'TVAAS Numeracy' = 'District-Wide: Numeracy') %>%
select(tvaas,'TVAAS Composite')
arrange(ach_profile,cORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_name)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_name)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,core_region)
arrange(ach_profile,CORE_region,desc(AlgI)) %>%
select(system_name,AlgI,CORE_region)
View()
View(ach_profile)
ach_profile %>%
summarise(mean_grad=mean(Graduation,na.rm=TRUE),
min_grad = min(Graduation,na.rm=TRUE),
max_grad=max(Graduation,na.rm=TRUE))
ach_profile %>%
mutate(median_ED = median(Pct_Ed,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_pct_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_pct_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >mediad_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
mutate(median_ED = median(Pct_ED,na.rm=TRUE),
median_Math = median(Math,na.rm=TRUE)) %>%
filter(Pct_ED >median_ED & Math > median_Math) %>%
select(system_name,Pct_ED,Math)
ach_profile %>%
group_by(CORE_Region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_region, Dropout, dropout_mean)
ach_profile %>%
group_by(CORE_Region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_Region, Dropout, dropout_mean)
ach_profile %>%
group_by(CORE_region) %>%
mutate(dropout_mean = mean(Dropout, na.rm = TRUE)) %>%
ungroup() %>%
filter(Dropout > dropout_mean) %>%
select(system_name, CORE_region, Dropout, dropout_mean)
select(system, system_name, Math, AlgI, AlgII, Math_avg,
ELA, EngI, EngII, EngIII, Eng_avg, Science, BioI, Chemistry, Sci_avg)
ach_profile %>%
rowwise() %>%
mutate(mean_Math = mean(c(Math,AlgI,AlgII),na.rm=TRUE),
mean_English = mean(c(ELA,EngI,EngII,EngIII),na.rm=TRUE),
mean_Science = mean(c(Science,BioI,Chemistry),na.rm=TRUE)
) %>%
ungroup() %>%
select(system, system_name, Math, AlgI, AlgII, Math_avg,
ELA, EngI, EngII, EngIII, Eng_avg, Science, BioI, Chemistry, Sci_avg)
ach_profile %>%
rowwise() %>%
mutate(mean_Math = mean(c(Math,AlgI,AlgII),na.rm=TRUE),
mean_English = mean(c(ELA,EngI,EngII,EngIII),na.rm=TRUE),
mean_Science = mean(c(Science,BioI,Chemistry),na.rm=TRUE)
) %>%
ungroup() %>%
select(system, system_name, Math, AlgI, AlgII, mean_Math,
ELA, EngI, EngII, EngIII, mean_English, Science, BioI, Chemistry, mean_Science)
view(tvaas)
View(tvaas)
source('C:/Users/Suhasini/gitdir/data-science/r-intro-suhasinipallai/suhasinipallai/data-wrangling/script.R', echo=TRUE)
ach_profile %>%
inner_join(tvaas,by="system") %>%
group_by(CORE_region)
ach_profile %>%
inner_join(tvaas,by="system") %>%
group_by(CORE_region)
rename(tvaas,'District Number'=system)
select(tvaas,'TVAAS Composite')
tvaas %>%
gather(subject,level,'TVAAS Composite':'TVAAS Numeracy')  %>%
arrange(`District Number`)
library(tidyverse)
ach_profile <- read_csv("data/achievement_profile_data_with_CORE.csv")
View(ach_profile)
getwd()
getwd()
View(ach_profile)
filter(ach_profile,AlgI ==100)
View(ach_profile)
summary(ach_profile)
glimpse(ach_profile)
?glimpse
??glimpse
library(dbplyr)
??glimpse
?glimpse
glimpse(ach_profile)
class(ach_profile)
?class
filter(ach_profile,AlgI == 100)
getwd()
#14
library(swirl)
library(ISLR)
library("ISLR")
install.packages("ISLR")
library("ISLR")
Auto
str(Auto)
str(Boston)
str(BOSTON)
str(Caravan)
str(USArrests)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
library(readxl)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 5)
irs_2014_dataset <- read_excel('./data/irs/2011-irs.xls', skip = 6)
rm(list=ls())
View(json_data)
json_data <- read_json("Data/forbes1_2000.json",simplifyVector = TRUE)
library("rjson")
library(jsonlite)
library(xlsx)
library("rjson")
library(jsonlite)
j <- read_json("Data/forbes_2000.json",simplifyVector = TRUE)
shiny::runApp('C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017')
runApp('C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017')
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
View(mydata_2018)
View(b_data)
d_2018 <- mydata_2018
d_2018$year <- "2018"
d_2018
View(d_2018)
d_2017 <- b_data
d_2017$year <- "2017"
total_data <- rbind(d_2017,d_2018)
colnames(d_2017)
colnames(d_2018)
d_2017(-c("timesamp"))
d_2017<- d_2017(,-c("timesamp"))
d_2017<- d_2017(,-c("timestamp"))
d_2017<- d_2017[(,-c("timestamp"))]
d_2017<- d_2017[(-c("timestamp"))]
d_2017<- d_2017[-c("timestamp")]
d_2017[-c("timestamp")]
colnames(d_2017)
d_2017[-c(12)]
View(d_2017)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
mutate(year = "2017") %>%  View()
total_networth2017 <-b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
mutate(year="2017")
total_networth2017
View(total_networth2017)
total_networth2018 <-mydata_2018 %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
mutate(year="2018")
View(total_networth2018)
total_networth <- cbind(total_networth2017,total_networth2018)
total_networth <- rbind(total_networth2017,total_networth2018)
View(total_networth)
ggplot(total_networth,aes(x=year,y=sum_net)) +geom_point()
ggplot(total_networth,aes(x=year,y=country)) +geom_point()
ggplot(total_networth,aes(y=year,x=country)) +geom_point()
ggplot(total_networth,aes(y=year,x=sum_net)) +geom_point()
ggplot(total_networth,aes(x=year,y=sum_net,color=country)) +geom_point()
total_networth[order(-total_networth$sum_net),][1:10,]
total_net<- total_networth[order(-total_networth$sum_net),][1:20,]
View(total_net)
ggplot(total_net,aes(y=year,x=sum_net)) +geom_point()
ggplot(total_net,aes(x=year,y=sum_net,color=country)) +geom_point()
ggplot(total_net,aes(x=year,y=sum_net,color=country,size=sum_net)) +geom_point()
ggplot(total_net,aes(x=year,y=sum_net,color=country,size=sum_net)) +geom_point() + labs(x="Year",y="Total Net Worth", colour="Country",size="Total\n Net Worth \n in Billions") +
theme(axis.title.x = element_text(color="black", size=14, face="bold"),
axis.title.y = element_text(color="black", size=14, face="bold"),
axis.text.x = element_text(hjust = 1,colour = "black",size=12,face="bold" ),
axis.text.y = element_text(hjust = 1,colour = "black",size=12,face="bold" ),
legend.box.background = element_rect(),
legend.text = element_text(face = "bold",size=12,colour = "black"),
legend.box.margin = margin(6, 6, 6, 6),
legend.title =  element_text(face="bold",colour="black") )
runApp()
total_networth2017 <-b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
mutate(year="2017")
total_networth2018 <-mydata_2018 %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
+ mutate(year="2018"
total_networth2018 <-mydata_2018 %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
+ mutate(year="2018")
total_networth2018 <-mydata_2018 %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%
mutate(year="2018")
total_networth <- rbind(total_networth2017,total_networth2018)
total_net<- total_networth[order(-total_networth$sum_net),][1:20,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
