x ="Gender", y ="Num of Billionaires")
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="bottom")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="bottom")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="right")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="bottom")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="top")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
P <- billionaires_data %>%
filter(!age==0 & !age==500,!gender=='unknown') %>%
group_by(gender) %>%
summarise(Count = n()) %>%
ggplot(aes(gender,Count,fill=gender)) +
geom_col() +
theme(legend.position="top")+
geom_text(aes(label=Count), vjust=1.6, color="black")
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
ggsave("plot.png")
# Define UI for application that draws a histogram
shinyUI(fluidPage(
# Application title
titlePanel(" World Billionaires - By Forbes - 2017 "),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
h3("Total Billionaires - ",max(billionaires_data$position)),
img(src="plot.png",height=72,width=72),
industries <- sort(unique(billionaires_data$industry)),
industries <- c("All",industries),
gender <-unique(billionaires_data$gender),
gender <- c("All",gender),
gender <- gender[-c(4)],
# images <- billionaires_data$squareImage,
sliderInput("rank",
"Number of Billionaires:",
min = 1,
max = 2000,
value = 15),
selectInput(inputId = "indus",
label      ="Select the industry:",
choices    = industries
),
selectInput(inputId="ag",
label = "Select the age grp:",
choices = c( "less than 20",
"20-30",
"30-40",
"40-50",
"50-60",
"60-70",
"70-80",
"80-90",
"90-110" ),
selected = "40-50"
),
selectInput(inputId = "gen",
label  = "Gender :",
choices = gender
),
checkboxInput(inputId="checkbox",
label = "Data Table",
value = FALSE
),
actionButton(inputId = "button",
label   =  "show"
)
),
# Show a plot of the generated distribution
mainPanel(
tabsetPanel(type="tabs",
tabPanel("Plot",plotOutput("barPlot")),
tabPanel("Data",tableOutput("table"))
#tabPanel("Images",imageOutput("img"))
)
)
)
))
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
img(src="plot.png",height=100,width=100)
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
p+ labs(title = "Genderwise Distribution",
x ="Gender", y ="Num of Billionaires")
dev.print(png, file="plot.png")
ggsave("plot.png")
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
industry_summary <- billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(industry) %>%
summarize(count = n()
)
View(industry_summary)
country_summary <- billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(country) %>%
summarize(count = n())
View(country_summary)
source_networth_summary_all <-billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(source) %>%
summarise(count = n(),
sum_networth = sum(worth_billions))
View(source_networth_summary_all)
industry_summary_all %>%
# filter(input$indus == "All") %>%
ggplot(aes(reorder(industry,count),count)) +
geom_col(color="blue",fill="red")+
theme(axis.text.x =element_text(angle=65,hjust = 1))
country_summary_all %>%
ggplot(aes(reorder(country,count),count)) +
geom_col() +
theme(axis.text.x=element_text(angle=65,hjust=1))
country_summary_all <- billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(country) %>%
summarize(count = n())
source_networth_summary_all <-billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(source) %>%
summarise(count = n(),
sum_networth = sum(worth_billions))
country_summary_all %>%
ggplot(aes(reorder(country,count),count)) +
geom_col() +
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(desc(sum_networth)) %>%
ggplot(aes(source,count,size=sum_networth,color=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth,color=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
billionaires_data %>% group_by(source)
billionaires_data %>% group_by(source) %>%  View()
billionaires_data %>% filter(source=="real estate") %>% View()
source_networth_summary_all %>%
filter(!age==0 & !age==50 & !age=='unknown') %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth,color=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all <-billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown') %>%
group_by(source) %>%
summarise(count = n(),
sum_networth = sum(worth_billions))
billionaires_data %>% filter(source=="real estate") %>% View()
billionaires_data %>% filter(source=="real estate" & !age==0 & !age==500 & !gender=='unknown') %>% View()
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth,color=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth)) +
geom_col()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(reorder(aes(source,count,size=sum_networth))) +
geom_col()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth)) +
geom_col()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth,fill=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
source_networth_summary_all %>%
filter(sum_networth >=50) %>%
ggplot(aes(source,count,size=sum_networth)) +
geom_point()+
theme(axis.text.x=element_text(angle=65,hjust=1))
runApp('billionaires_2017')
runApp('billionaires_2017')
country_summary_all %>%
ggplot(aes(reorder(country,count),count)) +
geom_col() +
theme(axis.text.x=element_text(angle=65,hjust=1))
runApp('billionaires_2017')
runApp('billionaires_2017')
ggplot(billionaires_data,aes(industry)) + geom_bar()
ggplot(billionaires_data,aes(industry)) + geom_histogram()
ggplot(industry_summary_all,aes(industry,count)) + geom_histogram()
ggplot(industry_summary_all,aes(industry)) + geom_histogram()
library(plotly)
plot_ly(p)
ggplotly(p)
ggplot(map_2_data, aes(x=map_2_data$LON, y=map_2_data$LAT, group=map_2_data$worth_billions)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75)
bb$industry <- factor(sample.int(5L, unique(nrow(bb$industry)), TRUE))
factpal <- colorFactor(topo.colors(17), bb$industry)
g<- leaflet(map_2_data) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~factpal(unique(bb$industry)))
ggplotly(g)
bb$industry <- factor(sample.int(5L, unique(nrow(bb$industry)), TRUE))
factpal <- colorFactor(topo.colors(17), bb$industry)
g<- leaflet(map_2_data) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~factpal(unique(bb$industry)))
g
runApp('billionaires_2017')
billionaires_data %>% filter(country=='Hong Kong')
billionaires_data %>% filter(country=='Hong Kong') %>% View()
?showticklabels
?add_annotations
country_summary_all %>%
filter(count>=10) %>%
ggplot(aes(reorder(country,count),count)) +
geom_col() +
theme(axis.text.x=element_text(angle=65,hjust=1))+
coord_flip() +
annotate("text",paste0(count))
country_summary_all %>%
filter(count>=10) %>%
ggplot(aes(reorder(country,count),count)) +
geom_col() +
theme(axis.text.x=element_text(angle=65,hjust=1))+
coord_flip() +
annotate("number",paste0(count))
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
my_map <- joinCountryData2Map( sp_data
,joinCode = "NAME"
,nameJoinColumn = "country",
verbose=TRUE)
mapDevice() #create worldmap shaped window
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
library(classInt)
library(RColorBrewer)
#getting class intervals
classInt <- classIntervals( sp_data[["total_worth"]]
,n=10, style = "jenks")
classInt[["data"]]
catMethod = classInt[["brks"]]
catMethod
#getting colours
colourPalette <- brewer.pal(9,'RdPu')
mapParams <- mapCountryData(my_map
,nameColumnToPlot="total_worth"
,addLegend=FALSE
,catMethod = catMethod
,colourPalette=colourPalette
)
#adding legend
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
sp_data <- billionaires_data %>%
filter(!age==0 & !age== 500 & !gender=='unknown') %>%
group_by(country) %>%
summarise(
total_worth = sum(worth_billions)
) %>%
ungroup() %>%
arrange(desc(total_worth))
my_map <- joinCountryData2Map( sp_data
,joinCode = "NAME"
,nameJoinColumn = "country",
verbose=TRUE)
mapDevice() #create worldmap shaped window
par(mai=c(0,0,0.2,0),xaxs="i",yaxs="i")
library(classInt)
library(RColorBrewer)
#getting class intervals
classInt <- classIntervals( sp_data[["total_worth"]]
,n=10, style = "jenks")
classInt[["data"]]
catMethod = classInt[["brks"]]
catMethod
#getting colours
colourPalette <- brewer.pal(9,'RdPu')
#plot map
mapParams <- mapCountryData(my_map
,nameColumnToPlot="total_worth"
,addLegend=FALSE
,catMethod = catMethod
,colourPalette=colourPalette
)
#adding legend
do.call(addMapLegend
,c(mapParams
,legendLabels="all"
,legendWidth=0.5
,legendIntervals="data"
,legendMar = 2))
library(ggplot2)
ggplot(map_2_data, aes(x=map_2_data$LON, y=map_2_data$LAT, group=map_2_data$worth_billions)) +
geom_polygon(fill="white", colour="black") +
xlim(-20, 40) + ylim(25,75)
bb$industry <- factor(sample.int(5L, unique(nrow(bb$industry)), TRUE))
factpal <- colorFactor(topo.colors(17), bb$industry)
g<- leaflet(map_2_data) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~factpal(unique(bb$industry)))
g
runApp('billionaires_2017')
library(DT)
runApp('billionaires_2017')
library(DT)
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
billionaires_data %>%  filter(!age==0 & !age==500 & !gender=='unknown') %>% View()
billionaires_data <-
billionaires_data %>%  filter(!age==0 & !age==500 & !gender=='unknown') %>% View()
colSums(billionaires_data)
colSums(is.na(billionaires_data))
str(billionaires_data)
billionaires_data
billionaires_data
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age1 <- billionaires_data$age==0
bb <- billionaires_data[no_age1,]
bb
bb
no_age_data <- billionaires_data[billionaires_data$age==0,]
toMatch <- c("&", "family", "brothers","and","-")
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
billionaires_data
View(billionaires_data)
billionaires_data %>%  filter(!age==0 & !age==500 & !gender=='unknown') %>% View()
billionaires_data %>%  filter(!age==0 & !age==500 & !gender=='unknown') %>% View()
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
View(b_data)
str(b_data)
colSums(is.na(b_data))
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
max(b_data$position)
nrow(b_data)
runApp('billionaires_2017')
b_data_copy <- b_data
b_data_copy
runApp('billionaires_2017')
b_data %>% filter(country=='India')
b_data %>% filter(country=='India') %>%  group_by(industry) %>% summarise(count=n())
b_data %>% filter(country=='India') %>%  group_by(industry) %>% summarise(count=n()) %>%View()
runApp('billionaires_2017')
b_data %>% filter(country=='India' & gender=='M') %>%  group_by(industry) %>% summarise(count=n()) %>%View()
b_data %>% filter(country=='India' & gender=='F') %>%  group_by(industry) %>% summarise(count=n()) %>%View()
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
country <- sort(unique(b_data$country))
country
countries <- sort(unique(b_data$country)),
countries <- c("All",countries),
countries <- sort(unique(b_data$country))
countries <- c("All",countries)
countries
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
b_data %>%  filter(gender=="M" & country=="China") %>%  group_by(country) %>% summarise(count=n()) %>% View()
b_data %>%  filter(gender=="All" & country=="China") %>%  group_by(country) %>% summarise(count=n()) %>% View()
b_data %>%  filter(gender=="F" & country=="China") %>%  group_by(country) %>% summarise(count=n()) %>% View()
b_data %>%  filter(gender=="M" & country=="China") %>%  group_by(country) %>% summarise(count=n()) %>% View()
b_data %>%  filter(country=="China") %>%  group_by(country) %>% summarise(count=n()) %>% View()
b_data %>%  filter(country=="China") %>%  group_by(country,gender) %>% summarise(count=n()) %>% View()
runApp('billionaires_2017')
runApp('billionaires_2017')
gg3 <- billionaires_data %>%  filter(age == 500 | age ==0) %>%
ggplot(aes(x=position,y=age,group=country,color=country)) +
geom_point()
gg3
billionaires_data %>% filter(!gender=='unknown'& !age==500 & !age == 0 ) %>%
ggplot(aes(x=age,y=position)) +
geom_point(aes(col=gender,size = worth_billions)) +
#geom_smooth(method="lm") +
labs(y="Position",
x="Age",
title="Age Vs Position"
)
gg
gg1 <- billionaires_data %>% filter(!age==500 & !age==0) %>%
ggplot(aes(x=position,y=age)) +
geom_point(aes(col=gender,size = worth/1000))
ggplotly(gg1)
billionaires_data %>%
filter(!gender=='unknown') %>%
group_by(industry,gender,worth) %>%
summarise(
count = n(),
mean_worth= sum(worth)
) %>%
ungroup() %>%
ggplot(aes(x=industry,y=worth,fill = gender)) +
geom_col() +
theme(axis.text.x = element_text(angle=65,hjust = 1))
billionaires_data %>%
filter(!age==0 & !age==500  & !gender=='unknown' & country=='United States') %>%
group_by(country,industry) %>%
summarise(mean_worth = mean(worth)) %>%
ggplot(aes(reorder(x=industry,-mean_worth),mean_worth,fill=country)) +
geom_col()+
theme(axis.text.x = element_text(angle=65,hjus=1))
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
