runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?datatable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?datatable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(b_data)
b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%  arrange(desc(sum_net)) %>%  View()
b_data_countrywise_networth <- b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%  arrange(desc(sum_net)) %>%  View()
temp <- b_data %>%
group_by(
country,
gender
) %>%
summarise(
count=n(),
total_networth = sum(worth_billions)
) %>%
ungroup()
temp <- temp[order(-temp$count),][1:25,]
ggplot(data=temp,aes(reorder(country,count),count,fill=gender)) +
geom_col(position='dodge')
View(b_data_countrywise_networth)
b_data_countrywise_networth <- b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%  arrange(desc(sum_net)) %>%  View()
b_data_countrywise_networth <- b_data %>%  group_by(country) %>%  summarise(sum_net = sum(worth_billions)) %>%  arrange(desc(sum_net))
View(b_data_countrywise_networth)
b_data_countrywise_networth <- b_data %>%  group_by(country,gender) %>%  summarise(sum_net = sum(worth_billions)) %>%  arrange(desc(sum_net))
View(b_data_countrywise_networth)
runApp()
runApp()
runApp()
runApp()
runApp()
View(select_data)
View(b_data_selected)
View(b_data)
View(bd)
View(b_data)
ps <- b_data
view(ps)
View(ps)
ps$squareImage <- paste0("https:",ps$squareImage)
runApp()
dat <- data.frame(
name = c('Bill Gates', 'Warren Buffett'),
flag = c('<img src="https://specials-images.forbesimg.com/imageserve/59d502f931358e542c034e76/416x416.jpg?background=000000&cropX1=245&cropX2=2420&cropY1=636&cropY2=2813
" height="52"></img>',
'<img src="https://specials-images.forbesimg.com/imageserve/59d50559" height="52"></img>'
)
)
dat
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
get_image <- function(urlpart) {
paste0("<img src = ",urlpart," height= 52 ></img>")
}
ps$squareImage <- get_image(ps$squareImage)
runApp()
b_data$squareImage <- get_image(b_data$squareImage)
paste0("<img src = ",urlpart," height= 52 ></img>")
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
View(b_data)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
runApp()
runApp()
b_data <- readRDS('./Data/b_data.rds')
runApp()
runApp()
View(b_data)
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
View(b_data)
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
# fn to make the col- img src
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
#adding img src https to the squareimage col of the dataframe
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
saveRDS(billionaires_data, 'billionaires_2017/Data/billionaires_data.rds')
write.csv(billionaires_data, 'billionaires_2017/Data/billionaires_data.csv')
saveRDS(b_data, 'billionaires_2017/Data/b_data.rds')
write.csv(billionaires_data, 'billionaires_2017/Data/b_data.csv')
getwd()
b_data <- readRDS("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017/Data/b_data.rds")
View(b_data)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
# fn to make the col- img src
get_image <- function(urlpart) {
paste0("<img src =https: ",urlpart," height= 52 ></img>")
}
#adding img src https to the squareimage col of the dataframe
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
saveRDS(billionaires_data, 'billionaires_2017/Data/billionaires_data.rds')
write.csv(billionaires_data, 'billionaires_2017/Data/billionaires_data.csv')
saveRDS(b_data, 'billionaires_2017/Data/b_data.rds')
write.csv(b_data, 'billionaires_2017/Data/b_data.csv')
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
runApp()
runApp()
View(b_data)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
#clean dataset
library(magrittr)
library(dplyr)
library(ggplot2)
library(plotly)
#library(maps)
library(rworldmap)
#reading the rds object
billionaires_data <- readRDS('r-objects/billionaires_data.rds')
billionaires_data <- billionaires_data %>% mutate(worth_billions = worth/1000)
no_age_data <- billionaires_data[billionaires_data$age==0,]
# returned 56 entries which had 0 as age - not known values
# write a regex for pattern matching for selected words &,family,brothers,and,-
toMatch <- c("&", "family", "brothers","and","-")
# updating the age col to 500 for paired or family names based on patterns
billionaires_data$age = ifelse(billionaires_data$age==0 & grepl(paste(toMatch, collapse="|"), billionaires_data$name),500,billionaires_data$age)
# updated 27 age to 500, 29 to 0 (pattern doesnt match)
b_data <-   billionaires_data %>%
filter(!age==0 & !age==500 & !gender=='unknown')
b_data$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
# fn to make the col- img src
get_image <- function(urlpart) {
paste0("<img src =https:",urlpart," height= 52 ></img>")
}
#adding img src https to the squareimage col of the dataframe
b_data$squareImage <- get_image(b_data$squareImage)
saveRDS(billionaires_data, 'r-objects/billionaires_data.rds')
write.csv(billionaires_data, 'r-objects/billionaires_data.csv')
saveRDS(b_data, 'r-objects/b_data.rds')
write.csv(b_data, 'r-objects/b_data.csv')
saveRDS(billionaires_data, 'billionaires_2017/Data/billionaires_data.rds')
write.csv(billionaires_data, 'billionaires_2017/Data/billionaires_data.csv')
saveRDS(b_data, 'billionaires_2017/Data/b_data.rds')
write.csv(b_data, 'billionaires_2017/Data/b_data.csv')
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library("rjson")
library(jsonlite)
library(magrittr)
library(dplyr)
data_2018 <- read_json("Data/b_list_2018.json",simplifyVector = TRUE)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
data_2018 <- read_json("Data/b_list_2018.json",simplifyVector = TRUE)
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/billionaires_2017")
setwd("C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World")
data_2018 <- read_json("Data/data_2018.json",simplifyVector = TRUE)
View(data_2018)
data_2018 <- read_json("Data/data_2018.json",simplifyVector = TRUE)
View(data_2018)
colSums(is.na(data_2018))
names(data_2018)
data_2018 <- data_2018[-c(8,14:21,23:25)]
names(data_2018)
colSums(is.na(data_2018))
data_2018$gender[is.na(data_2018$gender)] <- "unknown"
data_2018$age[is.na(data_2018$age)] <- 0
View(data_2018)
colSums(is.na(data_2018))
saveRDS(data_2018, 'r-objects/data_2018.rds')
write.csv(data_2018, 'r-objects/data_2018.csv')
data_2018 <- data_2018 %>% mutate(worth_billions = worth/1000)
toMatch <- c("&", "family", "brothers","and","-")
data_2018$age = ifelse(data_2018$age==0 & grepl(paste(toMatch, collapse="|"), data_2018$name),500,data_2018$age)
mydata_2018 <-   data_2018 %>%
filter(!age==0 & !age==500 & !gender=='unknown')
mydata_2018$age_group <-
case_when(
b_data$age < 20 ~ "less than 20",
b_data$age < 40 ~ "20-40",
b_data$age < 60 ~ "40-60",
b_data$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
mydata_2018$age_group <-
case_when(
mydata_2018$age < 20 ~ "less than 20",
mydata_2018$age < 40 ~ "20-40",
mydata_2018$age < 60 ~ "40-60",
mydata_2018$age < 80 ~ "60-80",
TRUE            ~ "80-110"
)
get_image <- function(urlpart) {
paste0("<img src =https:",urlpart," height= 52 ></img>")
}
mydata_2018$squareImage <- get_image(mydata_2018$squareImage)
saveRDS(mydata_2018, 'r-objects/mydata_2018.rds')
write.csv(mydata_2018, 'r-objects/mydata_2018.rds')
saveRDS(data_2018, 'r-objects/data_2018.rds')
write.csv(data_2018, 'r-objects/data_2018.csv')
#dataset with age 0 & 500 is data-2018(family billionaires names)
#saving in shiny Data folder
saveRDS(mydata_2018, 'billionaires_2017/Data/mydata_2018.rds')
write.csv(mydata_2018, 'billionaires_2017/Data/mydata_2018.csv')
saveRDS(data_2018, 'billionaires_2017/Data/data_2018.rds')
write.csv(data_2018, 'billionaires_2017/Data/data_2018.csv')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
country_func <- function(df) {
temp <- df %>%
group_by(
country,
gender
) %>%
summarise(
count=n(),
total_networth = sum(worth_billions)
) %>%
ungroup()
temp <- temp[order(-temp$count),][1:25,]
}
runApp('billionaires_2017')
country_func <- function(df) {
temp <- df %>%
group_by(
country,
gender
) %>%
summarise(
count=n(),
total_networth = sum(worth_billions)
) %>%
ungroup()
temp <- temp[order(-temp$count),][1:25,]
}
country_func(b_data)
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
b_data %>% filter(age_group=='40-60' & gender == 'M') %>% group_by(source,gender,age_group) %>%  summarise(count=n(),sum_net= sum(worth_billions)) %>%  View()
runApp('billionaires_2017')
b_data %>% filter(age_group=='40-60' & gender == 'M') %>% group_by(source,gender,age_group) %>%  summarise(count=n(),sum_net= sum(worth_billions)) %>%  ggplot(aes(source,count,size=sum_net,colour=gender))+geom_point()
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
runApp('billionaires_2017')
source('C:/Users/Suhasini/gitdir/data-science/Billionaires-of-the-World/clean/clean_dataset.R')
